@model ProductCreateViewModel
@{
    ViewData["Title"] = "Add Product";
    Layout = "~/Views/Shared/_UILayout.cshtml";
}

<div class="pagetitle">
    <h1>Product</h1>
    <nav>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="#">Dashboard</a></li>
            <li class="breadcrumb-item active">New Product</li>
        </ol>
    </nav>
</div>

<h1 class="text-center">
    <i class="bi bi-box-seam"></i>
    New Product
</h1>


<form id="productForm" asp-action="AddProduct" method="post">
    <!-- Product Name -->
    <div class="form-group">
        @Html.LabelFor(model => model.Product.Name, "Product Name")
        @Html.TextBoxFor(model => model.Product.Name, new { @class = "form-control", placeholder = "Enter product name" })
        @Html.ValidationMessageFor(model => model.Product.Name, "", new { @class = "text-danger" })
    </div>
    <br />
    <!-- Product Description -->
    <div class="form-group">
        @Html.LabelFor(model => model.Product.Description, "Description")
        @Html.TextAreaFor(model => model.Product.Description, new { @class = "form-control", placeholder = "Enter product description" })
        @Html.ValidationMessageFor(model => model.Product.Description, "", new { @class = "text-danger" })
    </div>
    <br />
    <!-- Price -->
    <div class="form-group">
        @Html.LabelFor(model => model.Product.Price, "Price")
        @Html.TextBoxFor(model => model.Product.Price, new { @class = "form-control", type = "number", step = "0.01", placeholder = "Enter price" })
        @Html.ValidationMessageFor(model => model.Product.Price, "", new { @class = "text-danger" })
    </div>
    <br />
    <!-- Stock Quantity -->
    <div class="form-group">
        @Html.LabelFor(model => model.Product.StockQuantity, "Stock Quantity")
        @Html.TextBoxFor(model => model.Product.StockQuantity, new { @class = "form-control", type = "number", placeholder = "Enter stock quantity" })
        @Html.ValidationMessageFor(model => model.Product.StockQuantity, "", new { @class = "text-danger" })
    </div>
    <br />
    <!-- Barcode -->
    <div class="form-group">
        @Html.LabelFor(model => model.Product.Barcode, "Barcode")
        @Html.TextBoxFor(model => model.Product.Barcode, new { @class = "form-control", placeholder = "Enter barcode" })
        @Html.ValidationMessageFor(model => model.Product.Barcode, "", new { @class = "text-danger" })
    </div>
    <br />
    <!-- Supplier -->
    <div class="form-group">
        @Html.LabelFor(model => model.Product.SelectedSupplierId, "Supplier")
        @Html.DropDownListFor(model => model.Product.SelectedSupplierId, new SelectList(Model.Suppliers, "Id", "Name"), "Select Supplier", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Product.SelectedSupplierId, "", new { @class = "text-danger" })
    </div>
    <br />
    <!-- Category -->
    <div class="form-group">
        @Html.LabelFor(model => model.Product.SelectedCategoryId, "Category")
        @Html.DropDownListFor(model => model.Product.SelectedCategoryId, new SelectList(Model.Categories, "Id", "CategoryName"), "Select Category", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Product.SelectedCategoryId, "", new { @class = "text-danger" })
    </div>
    <br />
    <!-- Warehouse -->
    <div class="form-group">
        @Html.LabelFor(model => model.WarehouseIds, "Warehouse")
        @Html.DropDownListFor(
                 model => model.WarehouseIds,
                 new SelectList(Model.Warehouses, "Id", "Name"),
                 "Select Warehouse",
                 new { @class = "form-control" }
                 )
        @Html.ValidationMessageFor(model => model.WarehouseIds, "", new { @class = "text-danger" })
    </div>
    <br />
    <div class="form-group">
        <button type="submit" class="btn btn-primary">
            <i class="bi bi-check-circle"></i> Create
        </button>
    </div>
</form>



